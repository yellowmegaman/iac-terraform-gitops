---
kind: StatefulSet
apiVersion: apps/v1beta2
metadata:
  name: prometheus
  namespace: moonitoring
  labels: &Labels
    k8s-app: prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: prometheus
spec:
  serviceName: prometheus
  replicas: 1
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      serviceAccountName: moonitoring
      initContainers:
        - name: "init-chown-data"
          image: marketplace.gcr.io/google/prometheus/debian9:2.2
          imagePullPolicy: Always
          command: ["chown", "-R", "65534:65534", "/data"]
          volumeMounts:
            - name: prometheus-data
              mountPath: /data
              subPath: ""
      containers:
        - name: prometheus-server
          image: marketplace.gcr.io/google/prometheus:2.2
          imagePullPolicy: "IfNotPresent"
          args:
            - --config.file=/etc/config/prometheus.yaml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            - --web.enable-admin-api
            - --storage.tsdb.retention=15d
            - --web.external-url=https://prometheus-envplaceholder.domainplaceholder/
          ports:
            - name: prom
              containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: prom
            initialDelaySeconds: 60
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: prom
            initialDelaySeconds: 60
            timeoutSeconds: 30
          # based on 10 running nodes with 30 pods each
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: prometheus-data
              mountPath: /data
              subPath: ""
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                      - prometheus
              topologyKey: "kubernetes.io/hostname"
  volumeClaimTemplates:
    - metadata:
        name: prometheus-data
        labels: *Labels
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "16Gi"
